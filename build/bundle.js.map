{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./controller/formController.js","webpack:///./controller/index.js","webpack:///./index.js","webpack:///./routes/formRouter.js","webpack:///./server.js","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"express-mongo-sanitize\"","webpack:///external \"express-rate-limit\"","webpack:///external \"helmet\"","webpack:///external \"hpp\"","webpack:///external \"mongoose\"","webpack:///external \"morgan\"","webpack:///external \"xss-clean\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","export default new (class FormController {\r\n\tshowAllForms(req, res) {\r\n\t\tres.send('showAllForms')\r\n\t}\r\n\r\n\tsetForms(req, res) {\r\n\t\tres.send('setForms')\r\n\t}\r\n})()\r\n","import formController from \"./formController\";\r\n\r\nexport { formController };\r\n","import server from './server'\r\n\r\nserver.listen(process.env.PORT || 3000, () => {\r\n\tconsole.clear()\r\n\tconsole.log(`[Avid-api]_server is running on port ${process.env.PORT || 3000}`)\r\n})\r\n","import { Router } from 'express'\nimport { formController } from '../controller'\n\nconst router = Router()\n\nrouter.get('/', (req, res) => res.send('hello World'))\nrouter\n\t.route('/form')\n\t.get(formController.showAllForms)\n\t.post(formController.setForms)\nexport default router\n","import express from 'express'\r\nimport mongoose from 'mongoose'\r\nimport bodyParser from 'body-parser'\r\nimport cookieParser from 'cookie-parser'\r\nimport morgan from 'morgan'\r\nimport rateLimit from 'express-rate-limit'\r\nimport helmet from 'helmet'\r\nimport mongoSanitize from 'express-mongo-sanitize'\r\nimport xss from 'xss-clean'\r\nimport hpp from 'hpp'\r\nimport formRouter from './routes/formRouter'\r\n\r\nrequire('dotenv').config()\r\n\r\n// //////////////START DATABASE CONFIG///////////////////////////\r\nmongoose.connect(process.env.DB_ADDRESS, {\r\n\tuseUnifiedTopology: true,\r\n\tuseNewUrlParser: true,\r\n\tuseCreateIndex: true,\r\n\tuseFindAndModify: false,\r\n})\r\nmongoose.connection.on('connected', () => {\r\n\tconsole.log('[MongoDB] connection established successfully')\r\n})\r\nmongoose.connection.on('error', err => {\r\n\tconsole.log(`connection to mongo failed ${err}`)\r\n})\r\nmongoose.connection.on('disconnected', () => {\r\n\tconsole.log('mongo db connection closed')\r\n})\r\nmongoose.set('useCreateIndex', true)\r\n\r\nmongoose.Promise = global.Promise\r\n\r\n// ///////////////END DATABASE CONFIG///////////////////////////\r\n\r\nconst app = express()\r\n\r\n// Set security HTTP headers\r\napp.use(helmet())\r\n\r\n// Development logging\r\nif (process.env.NODE_ENV === 'development') {\r\n\tapp.use(morgan('dev'))\r\n}\r\n\r\n// Limit requests from same API\r\nconst limiter = rateLimit({\r\n\tmax: 100,\r\n\twindowMs: 60 * 60 * 1000,\r\n\tmessage: 'Too many requests from this IP, please try again in an hour!',\r\n})\r\n\r\napp.use('/api', limiter)\r\n\r\n// Body parser, reading data from body into req.body\r\napp.use(\r\n\texpress.json({\r\n\t\tlimit: '10kb',\r\n\t})\r\n)\r\n\r\napp.use(cookieParser())\r\n\r\n// Data sanitization against NoSQL query injection\r\napp.use(mongoSanitize())\r\n\r\n// Data sanitization against XSS\r\napp.use(xss())\r\n\r\n// Prevent parameter pollution\r\napp.use(\r\n\thpp({\r\n\t\twhitelist: [\r\n\t\t\t'duration',\r\n\t\t\t'ratingsQuantity',\r\n\t\t\t'ratingsAverage',\r\n\t\t\t'maxGroupSize',\r\n\t\t\t'difficulty',\r\n\t\t\t'price',\r\n\t\t],\r\n\t})\r\n)\r\n\r\napp.use(morgan('combined'))\r\n\r\n// ///////////////START APP MIDDLEWARE///////////////////////////\r\napp.use(cookieParser())\r\napp.use(bodyParser.json())\r\napp.use(\r\n\tbodyParser.urlencoded({\r\n\t\textended: true,\r\n\t})\r\n)\r\napp.disable('x-powered-by')\r\n\r\n// ////////////ErrorHandler\r\nconst miscellaneousErrors = err =>\r\n\tprocess.on('uncaughtException', err => {\r\n\t\tconsole.log('UNHANDLED REJECTION! ðŸ¤• shutting down...')\r\n\t\tconsole.log(err.name, err.message)\r\n\t\tprocess.exit(1)\r\n\t})\r\nprocess.on('unhandledRejection', miscellaneousErrors)\r\nprocess.on('uncaughtException', miscellaneousErrors)\r\n\r\n// //////////////START ROUTER CONFIG///////////////////////////\r\n\r\napp.use('/', formRouter)\r\n\r\n// ///////////////START ERROR HANDLING///////////////////////////\r\napp.use((req, res, next) => {\r\n\tres.status(404).send('404')\r\n})\r\n\r\napp.use((err, req, res, next) => {\r\n\tres.locals.message = err.message\r\n\tres.locals.error = req.app.get('env') === 'development' ? err : {}\r\n\tres.status(err.status || 500)\r\n\tres.send(err.message)\r\n})\r\nexport default app\r\n","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-mongo-sanitize\");","module.exports = require(\"express-rate-limit\");","module.exports = require(\"helmet\");","module.exports = require(\"hpp\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"xss-clean\");"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAIA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AAEA;AADA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AADA;AAYA;AACA;AAEA;AACA;AACA;AAEA;AADA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzHA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}